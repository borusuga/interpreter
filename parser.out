Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> fun_list
Rule 2     fun_list -> function fun_list
Rule 3     fun_list -> function
Rule 4     function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT
Rule 5     function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT
Rule 6     par_list -> parameter COMMA par_list
Rule 7     par_list -> parameter
Rule 8     parameter -> type VARIABLE
Rule 9     parameter -> FIELD type type VARIABLE
Rule 10    stmt_list -> statement COMMA stmt_list
Rule 11    stmt_list -> statement DOT
Rule 12    statement -> declaration
Rule 13    statement -> assignment
Rule 14    statement -> arithm_operation
Rule 15    statement -> until
Rule 16    statement -> check
Rule 17    statement -> function_call
Rule 18    statement -> robot_operation
Rule 19    statement -> return
Rule 20    declaration -> type variable_list R_ASSIGNMENT literal
Rule 21    declaration -> FIELD type type variable_list R_ASSIGNMENT literal
Rule 22    type -> TINY
Rule 23    type -> SMALL
Rule 24    type -> NORMAL
Rule 25    type -> BIG
Rule 26    variable_list -> VARIABLE variable_list
Rule 27    variable_list -> VARIABLE
Rule 28    literal -> U_NUMBER
Rule 29    literal -> S_NUMBER
Rule 30    assignment -> arithm_operation R_ASSIGNMENT arithm_operation
Rule 31    assignment -> arithm_operation R_ASSIGNMENT assignment
Rule 32    assignment -> arithm_operation L_ASSIGNMENT arithm_operation
Rule 33    assignment -> arithm_operation L_ASSIGNMENT assignment
Rule 34    arithm_operation -> OPEN_BR arithm_operation CLOSING_BR
Rule 35    arithm_operation -> ADD arithm_operation
Rule 36    arithm_operation -> SUB arithm_operation
Rule 37    arithm_operation -> arithm_operation MUL arithm_operation
Rule 38    arithm_operation -> arithm_operation DIV arithm_operation
Rule 39    arithm_operation -> arithm_operation ADD arithm_operation
Rule 40    arithm_operation -> arithm_operation SUB arithm_operation
Rule 41    arithm_operation -> varlit
Rule 42    arithm_operation -> function_call
Rule 43    arithm_operation -> robot_operation
Rule 44    varlit -> VARIABLE
Rule 45    varlit -> literal
Rule 46    varlit -> matr_elem
Rule 47    matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR
Rule 48    comparison -> arithm_operation N_EQ arithm_operation
Rule 49    comparison -> arithm_operation L_EQ arithm_operation
Rule 50    comparison -> arithm_operation GR_EQ arithm_operation
Rule 51    until -> UNTIL comparison DO stmt_list
Rule 52    check -> CHECK comparison DO stmt_list
Rule 53    function_call -> VARIABLE OPEN_BR CLOSING_BR
Rule 54    function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR
Rule 55    robot_operation -> GO
Rule 56    robot_operation -> RL
Rule 57    robot_operation -> RR
Rule 58    robot_operation -> SONAR
Rule 59    robot_operation -> COMPASS
Rule 60    return -> RETURN arithm_operation

Terminals, with rules where they appear

ADD                  : 35 39
BEGIN                : 4 5
BIG                  : 25
CHECK                : 52
CLOSING_BR           : 34 53 54
COMMA                : 6 10
COMPASS              : 59
DIV                  : 38
DO                   : 51 52
DOT                  : 4 5 11
END                  : 4 5
FIELD                : 9 21
GO                   : 55
GR_EQ                : 50
L_ASSIGNMENT         : 32 33
L_EQ                 : 49
MUL                  : 37
NORMAL               : 24
N_EQ                 : 48
OPEN_BR              : 34 53 54
RETURN               : 60
RL                   : 56
RR                   : 57
R_ASSIGNMENT         : 20 21 30 31
SMALL                : 23
SONAR                : 58
SQ_CLOSING_BR        : 4 5 47
SQ_OPEN_BR           : 4 5 47
SUB                  : 36 40
S_NUMBER             : 29
TINY                 : 22
UNTIL                : 51
U_NUMBER             : 28
VARIABLE             : 4 5 8 9 26 27 44 47 53 54
error                : 

Nonterminals, with rules where they appear

arithm_operation     : 14 30 30 31 32 32 33 34 35 36 37 37 38 38 39 39 40 40 48 48 49 49 50 50 60
assignment           : 13 31 33
check                : 16
comparison           : 51 52
declaration          : 12
fun_list             : 1 2
function             : 2 3
function_call        : 17 42
literal              : 20 21 45 47 47
matr_elem            : 46
par_list             : 4 6
parameter            : 6 7
program              : 0
return               : 19
robot_operation      : 18 43
statement            : 10 11
stmt_list            : 4 5 10 51 52
type                 : 4 5 8 9 9 20 21 21
until                : 15
variable_list        : 20 21 26 54
varlit               : 41

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . fun_list
    (2) fun_list -> . function fun_list
    (3) fun_list -> . function
    (4) function -> . type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT
    (5) function -> . type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    program                        shift and go to state 1
    fun_list                       shift and go to state 2
    function                       shift and go to state 3
    type                           shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> fun_list .

    $end            reduce using rule 1 (program -> fun_list .)


state 3

    (2) fun_list -> function . fun_list
    (3) fun_list -> function .
    (2) fun_list -> . function fun_list
    (3) fun_list -> . function
    (4) function -> . type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT
    (5) function -> . type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    $end            reduce using rule 3 (fun_list -> function .)
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    function                       shift and go to state 3
    fun_list                       shift and go to state 9
    type                           shift and go to state 4

state 4

    (4) function -> type . VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT
    (5) function -> type . VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT

    VARIABLE        shift and go to state 10


state 5

    (22) type -> TINY .

    VARIABLE        reduce using rule 22 (type -> TINY .)
    TINY            reduce using rule 22 (type -> TINY .)
    SMALL           reduce using rule 22 (type -> TINY .)
    NORMAL          reduce using rule 22 (type -> TINY .)
    BIG             reduce using rule 22 (type -> TINY .)


state 6

    (23) type -> SMALL .

    VARIABLE        reduce using rule 23 (type -> SMALL .)
    TINY            reduce using rule 23 (type -> SMALL .)
    SMALL           reduce using rule 23 (type -> SMALL .)
    NORMAL          reduce using rule 23 (type -> SMALL .)
    BIG             reduce using rule 23 (type -> SMALL .)


state 7

    (24) type -> NORMAL .

    VARIABLE        reduce using rule 24 (type -> NORMAL .)
    TINY            reduce using rule 24 (type -> NORMAL .)
    SMALL           reduce using rule 24 (type -> NORMAL .)
    NORMAL          reduce using rule 24 (type -> NORMAL .)
    BIG             reduce using rule 24 (type -> NORMAL .)


state 8

    (25) type -> BIG .

    VARIABLE        reduce using rule 25 (type -> BIG .)
    TINY            reduce using rule 25 (type -> BIG .)
    SMALL           reduce using rule 25 (type -> BIG .)
    NORMAL          reduce using rule 25 (type -> BIG .)
    BIG             reduce using rule 25 (type -> BIG .)


state 9

    (2) fun_list -> function fun_list .

    $end            reduce using rule 2 (fun_list -> function fun_list .)


state 10

    (4) function -> type VARIABLE . SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT
    (5) function -> type VARIABLE . SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT

    SQ_OPEN_BR      shift and go to state 11


state 11

    (4) function -> type VARIABLE SQ_OPEN_BR . par_list SQ_CLOSING_BR BEGIN stmt_list END DOT
    (5) function -> type VARIABLE SQ_OPEN_BR . SQ_CLOSING_BR BEGIN stmt_list END DOT
    (6) par_list -> . parameter COMMA par_list
    (7) par_list -> . parameter
    (8) parameter -> . type VARIABLE
    (9) parameter -> . FIELD type type VARIABLE
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    SQ_CLOSING_BR   shift and go to state 14
    FIELD           shift and go to state 16
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    type                           shift and go to state 12
    par_list                       shift and go to state 13
    parameter                      shift and go to state 15

state 12

    (8) parameter -> type . VARIABLE

    VARIABLE        shift and go to state 17


state 13

    (4) function -> type VARIABLE SQ_OPEN_BR par_list . SQ_CLOSING_BR BEGIN stmt_list END DOT

    SQ_CLOSING_BR   shift and go to state 18


state 14

    (5) function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR . BEGIN stmt_list END DOT

    BEGIN           shift and go to state 19


state 15

    (6) par_list -> parameter . COMMA par_list
    (7) par_list -> parameter .

    COMMA           shift and go to state 20
    SQ_CLOSING_BR   reduce using rule 7 (par_list -> parameter .)


state 16

    (9) parameter -> FIELD . type type VARIABLE
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    type                           shift and go to state 21

state 17

    (8) parameter -> type VARIABLE .

    COMMA           reduce using rule 8 (parameter -> type VARIABLE .)
    SQ_CLOSING_BR   reduce using rule 8 (parameter -> type VARIABLE .)


state 18

    (4) function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR . BEGIN stmt_list END DOT

    BEGIN           shift and go to state 22


state 19

    (5) function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN . stmt_list END DOT
    (10) stmt_list -> . statement COMMA stmt_list
    (11) stmt_list -> . statement DOT
    (12) statement -> . declaration
    (13) statement -> . assignment
    (14) statement -> . arithm_operation
    (15) statement -> . until
    (16) statement -> . check
    (17) statement -> . function_call
    (18) statement -> . robot_operation
    (19) statement -> . return
    (20) declaration -> . type variable_list R_ASSIGNMENT literal
    (21) declaration -> . FIELD type type variable_list R_ASSIGNMENT literal
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (51) until -> . UNTIL comparison DO stmt_list
    (52) check -> . CHECK comparison DO stmt_list
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (60) return -> . RETURN arithm_operation
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    FIELD           shift and go to state 36
    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    UNTIL           shift and go to state 41
    CHECK           shift and go to state 42
    VARIABLE        shift and go to state 24
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    RETURN          shift and go to state 48
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    type                           shift and go to state 23
    stmt_list                      shift and go to state 25
    statement                      shift and go to state 26
    declaration                    shift and go to state 27
    assignment                     shift and go to state 28
    arithm_operation               shift and go to state 29
    until                          shift and go to state 30
    check                          shift and go to state 31
    function_call                  shift and go to state 32
    robot_operation                shift and go to state 33
    return                         shift and go to state 34
    literal                        shift and go to state 35
    varlit                         shift and go to state 40
    matr_elem                      shift and go to state 49

state 20

    (6) par_list -> parameter COMMA . par_list
    (6) par_list -> . parameter COMMA par_list
    (7) par_list -> . parameter
    (8) parameter -> . type VARIABLE
    (9) parameter -> . FIELD type type VARIABLE
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    FIELD           shift and go to state 16
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    parameter                      shift and go to state 15
    par_list                       shift and go to state 52
    type                           shift and go to state 12

state 21

    (9) parameter -> FIELD type . type VARIABLE
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    type                           shift and go to state 53

state 22

    (4) function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN . stmt_list END DOT
    (10) stmt_list -> . statement COMMA stmt_list
    (11) stmt_list -> . statement DOT
    (12) statement -> . declaration
    (13) statement -> . assignment
    (14) statement -> . arithm_operation
    (15) statement -> . until
    (16) statement -> . check
    (17) statement -> . function_call
    (18) statement -> . robot_operation
    (19) statement -> . return
    (20) declaration -> . type variable_list R_ASSIGNMENT literal
    (21) declaration -> . FIELD type type variable_list R_ASSIGNMENT literal
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (51) until -> . UNTIL comparison DO stmt_list
    (52) check -> . CHECK comparison DO stmt_list
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (60) return -> . RETURN arithm_operation
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    FIELD           shift and go to state 36
    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    UNTIL           shift and go to state 41
    CHECK           shift and go to state 42
    VARIABLE        shift and go to state 24
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    RETURN          shift and go to state 48
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    type                           shift and go to state 23
    stmt_list                      shift and go to state 54
    statement                      shift and go to state 26
    declaration                    shift and go to state 27
    assignment                     shift and go to state 28
    arithm_operation               shift and go to state 29
    until                          shift and go to state 30
    check                          shift and go to state 31
    function_call                  shift and go to state 32
    robot_operation                shift and go to state 33
    return                         shift and go to state 34
    literal                        shift and go to state 35
    varlit                         shift and go to state 40
    matr_elem                      shift and go to state 49

state 23

    (20) declaration -> type . variable_list R_ASSIGNMENT literal
    (26) variable_list -> . VARIABLE variable_list
    (27) variable_list -> . VARIABLE

    VARIABLE        shift and go to state 56

    variable_list                  shift and go to state 55

state 24

    (53) function_call -> VARIABLE . OPEN_BR CLOSING_BR
    (54) function_call -> VARIABLE . OPEN_BR variable_list CLOSING_BR
    (44) varlit -> VARIABLE .
    (47) matr_elem -> VARIABLE . SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 57
    R_ASSIGNMENT    reduce using rule 44 (varlit -> VARIABLE .)
    L_ASSIGNMENT    reduce using rule 44 (varlit -> VARIABLE .)
    MUL             reduce using rule 44 (varlit -> VARIABLE .)
    DIV             reduce using rule 44 (varlit -> VARIABLE .)
    ADD             reduce using rule 44 (varlit -> VARIABLE .)
    SUB             reduce using rule 44 (varlit -> VARIABLE .)
    COMMA           reduce using rule 44 (varlit -> VARIABLE .)
    DOT             reduce using rule 44 (varlit -> VARIABLE .)
    SQ_OPEN_BR      shift and go to state 58


state 25

    (5) function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list . END DOT

    END             shift and go to state 59


state 26

    (10) stmt_list -> statement . COMMA stmt_list
    (11) stmt_list -> statement . DOT

    COMMA           shift and go to state 60
    DOT             shift and go to state 61


state 27

    (12) statement -> declaration .

    COMMA           reduce using rule 12 (statement -> declaration .)
    DOT             reduce using rule 12 (statement -> declaration .)


state 28

    (13) statement -> assignment .

    COMMA           reduce using rule 13 (statement -> assignment .)
    DOT             reduce using rule 13 (statement -> assignment .)


state 29

    (14) statement -> arithm_operation .
    (30) assignment -> arithm_operation . R_ASSIGNMENT arithm_operation
    (31) assignment -> arithm_operation . R_ASSIGNMENT assignment
    (32) assignment -> arithm_operation . L_ASSIGNMENT arithm_operation
    (33) assignment -> arithm_operation . L_ASSIGNMENT assignment
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    COMMA           reduce using rule 14 (statement -> arithm_operation .)
    DOT             reduce using rule 14 (statement -> arithm_operation .)
    R_ASSIGNMENT    shift and go to state 62
    L_ASSIGNMENT    shift and go to state 63
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 30

    (15) statement -> until .

    COMMA           reduce using rule 15 (statement -> until .)
    DOT             reduce using rule 15 (statement -> until .)


state 31

    (16) statement -> check .

    COMMA           reduce using rule 16 (statement -> check .)
    DOT             reduce using rule 16 (statement -> check .)


state 32

    (17) statement -> function_call .
    (42) arithm_operation -> function_call .

  ! reduce/reduce conflict for COMMA resolved using rule 17 (statement -> function_call .)
  ! reduce/reduce conflict for DOT resolved using rule 17 (statement -> function_call .)
    COMMA           reduce using rule 17 (statement -> function_call .)
    DOT             reduce using rule 17 (statement -> function_call .)
    R_ASSIGNMENT    reduce using rule 42 (arithm_operation -> function_call .)
    L_ASSIGNMENT    reduce using rule 42 (arithm_operation -> function_call .)
    MUL             reduce using rule 42 (arithm_operation -> function_call .)
    DIV             reduce using rule 42 (arithm_operation -> function_call .)
    ADD             reduce using rule 42 (arithm_operation -> function_call .)
    SUB             reduce using rule 42 (arithm_operation -> function_call .)

  ! COMMA           [ reduce using rule 42 (arithm_operation -> function_call .) ]
  ! DOT             [ reduce using rule 42 (arithm_operation -> function_call .) ]


state 33

    (18) statement -> robot_operation .
    (43) arithm_operation -> robot_operation .

  ! reduce/reduce conflict for COMMA resolved using rule 18 (statement -> robot_operation .)
  ! reduce/reduce conflict for DOT resolved using rule 18 (statement -> robot_operation .)
    COMMA           reduce using rule 18 (statement -> robot_operation .)
    DOT             reduce using rule 18 (statement -> robot_operation .)
    R_ASSIGNMENT    reduce using rule 43 (arithm_operation -> robot_operation .)
    L_ASSIGNMENT    reduce using rule 43 (arithm_operation -> robot_operation .)
    MUL             reduce using rule 43 (arithm_operation -> robot_operation .)
    DIV             reduce using rule 43 (arithm_operation -> robot_operation .)
    ADD             reduce using rule 43 (arithm_operation -> robot_operation .)
    SUB             reduce using rule 43 (arithm_operation -> robot_operation .)

  ! COMMA           [ reduce using rule 43 (arithm_operation -> robot_operation .) ]
  ! DOT             [ reduce using rule 43 (arithm_operation -> robot_operation .) ]


state 34

    (19) statement -> return .

    COMMA           reduce using rule 19 (statement -> return .)
    DOT             reduce using rule 19 (statement -> return .)


state 35

    (45) varlit -> literal .

    R_ASSIGNMENT    reduce using rule 45 (varlit -> literal .)
    L_ASSIGNMENT    reduce using rule 45 (varlit -> literal .)
    MUL             reduce using rule 45 (varlit -> literal .)
    DIV             reduce using rule 45 (varlit -> literal .)
    ADD             reduce using rule 45 (varlit -> literal .)
    SUB             reduce using rule 45 (varlit -> literal .)
    COMMA           reduce using rule 45 (varlit -> literal .)
    DOT             reduce using rule 45 (varlit -> literal .)
    CLOSING_BR      reduce using rule 45 (varlit -> literal .)
    N_EQ            reduce using rule 45 (varlit -> literal .)
    L_EQ            reduce using rule 45 (varlit -> literal .)
    GR_EQ           reduce using rule 45 (varlit -> literal .)
    DO              reduce using rule 45 (varlit -> literal .)


state 36

    (21) declaration -> FIELD . type type variable_list R_ASSIGNMENT literal
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    type                           shift and go to state 68

state 37

    (34) arithm_operation -> OPEN_BR . arithm_operation CLOSING_BR
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 69
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 38

    (35) arithm_operation -> ADD . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 73
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 39

    (36) arithm_operation -> SUB . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 74
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 40

    (41) arithm_operation -> varlit .

    R_ASSIGNMENT    reduce using rule 41 (arithm_operation -> varlit .)
    L_ASSIGNMENT    reduce using rule 41 (arithm_operation -> varlit .)
    MUL             reduce using rule 41 (arithm_operation -> varlit .)
    DIV             reduce using rule 41 (arithm_operation -> varlit .)
    ADD             reduce using rule 41 (arithm_operation -> varlit .)
    SUB             reduce using rule 41 (arithm_operation -> varlit .)
    COMMA           reduce using rule 41 (arithm_operation -> varlit .)
    DOT             reduce using rule 41 (arithm_operation -> varlit .)
    CLOSING_BR      reduce using rule 41 (arithm_operation -> varlit .)
    N_EQ            reduce using rule 41 (arithm_operation -> varlit .)
    L_EQ            reduce using rule 41 (arithm_operation -> varlit .)
    GR_EQ           reduce using rule 41 (arithm_operation -> varlit .)
    DO              reduce using rule 41 (arithm_operation -> varlit .)


state 41

    (51) until -> UNTIL . comparison DO stmt_list
    (48) comparison -> . arithm_operation N_EQ arithm_operation
    (49) comparison -> . arithm_operation L_EQ arithm_operation
    (50) comparison -> . arithm_operation GR_EQ arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    comparison                     shift and go to state 75
    arithm_operation               shift and go to state 76
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 42

    (52) check -> CHECK . comparison DO stmt_list
    (48) comparison -> . arithm_operation N_EQ arithm_operation
    (49) comparison -> . arithm_operation L_EQ arithm_operation
    (50) comparison -> . arithm_operation GR_EQ arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    comparison                     shift and go to state 77
    arithm_operation               shift and go to state 76
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 43

    (55) robot_operation -> GO .

    COMMA           reduce using rule 55 (robot_operation -> GO .)
    DOT             reduce using rule 55 (robot_operation -> GO .)
    R_ASSIGNMENT    reduce using rule 55 (robot_operation -> GO .)
    L_ASSIGNMENT    reduce using rule 55 (robot_operation -> GO .)
    MUL             reduce using rule 55 (robot_operation -> GO .)
    DIV             reduce using rule 55 (robot_operation -> GO .)
    ADD             reduce using rule 55 (robot_operation -> GO .)
    SUB             reduce using rule 55 (robot_operation -> GO .)
    CLOSING_BR      reduce using rule 55 (robot_operation -> GO .)
    N_EQ            reduce using rule 55 (robot_operation -> GO .)
    L_EQ            reduce using rule 55 (robot_operation -> GO .)
    GR_EQ           reduce using rule 55 (robot_operation -> GO .)
    DO              reduce using rule 55 (robot_operation -> GO .)


state 44

    (56) robot_operation -> RL .

    COMMA           reduce using rule 56 (robot_operation -> RL .)
    DOT             reduce using rule 56 (robot_operation -> RL .)
    R_ASSIGNMENT    reduce using rule 56 (robot_operation -> RL .)
    L_ASSIGNMENT    reduce using rule 56 (robot_operation -> RL .)
    MUL             reduce using rule 56 (robot_operation -> RL .)
    DIV             reduce using rule 56 (robot_operation -> RL .)
    ADD             reduce using rule 56 (robot_operation -> RL .)
    SUB             reduce using rule 56 (robot_operation -> RL .)
    CLOSING_BR      reduce using rule 56 (robot_operation -> RL .)
    N_EQ            reduce using rule 56 (robot_operation -> RL .)
    L_EQ            reduce using rule 56 (robot_operation -> RL .)
    GR_EQ           reduce using rule 56 (robot_operation -> RL .)
    DO              reduce using rule 56 (robot_operation -> RL .)


state 45

    (57) robot_operation -> RR .

    COMMA           reduce using rule 57 (robot_operation -> RR .)
    DOT             reduce using rule 57 (robot_operation -> RR .)
    R_ASSIGNMENT    reduce using rule 57 (robot_operation -> RR .)
    L_ASSIGNMENT    reduce using rule 57 (robot_operation -> RR .)
    MUL             reduce using rule 57 (robot_operation -> RR .)
    DIV             reduce using rule 57 (robot_operation -> RR .)
    ADD             reduce using rule 57 (robot_operation -> RR .)
    SUB             reduce using rule 57 (robot_operation -> RR .)
    CLOSING_BR      reduce using rule 57 (robot_operation -> RR .)
    N_EQ            reduce using rule 57 (robot_operation -> RR .)
    L_EQ            reduce using rule 57 (robot_operation -> RR .)
    GR_EQ           reduce using rule 57 (robot_operation -> RR .)
    DO              reduce using rule 57 (robot_operation -> RR .)


state 46

    (58) robot_operation -> SONAR .

    COMMA           reduce using rule 58 (robot_operation -> SONAR .)
    DOT             reduce using rule 58 (robot_operation -> SONAR .)
    R_ASSIGNMENT    reduce using rule 58 (robot_operation -> SONAR .)
    L_ASSIGNMENT    reduce using rule 58 (robot_operation -> SONAR .)
    MUL             reduce using rule 58 (robot_operation -> SONAR .)
    DIV             reduce using rule 58 (robot_operation -> SONAR .)
    ADD             reduce using rule 58 (robot_operation -> SONAR .)
    SUB             reduce using rule 58 (robot_operation -> SONAR .)
    CLOSING_BR      reduce using rule 58 (robot_operation -> SONAR .)
    N_EQ            reduce using rule 58 (robot_operation -> SONAR .)
    L_EQ            reduce using rule 58 (robot_operation -> SONAR .)
    GR_EQ           reduce using rule 58 (robot_operation -> SONAR .)
    DO              reduce using rule 58 (robot_operation -> SONAR .)


state 47

    (59) robot_operation -> COMPASS .

    COMMA           reduce using rule 59 (robot_operation -> COMPASS .)
    DOT             reduce using rule 59 (robot_operation -> COMPASS .)
    R_ASSIGNMENT    reduce using rule 59 (robot_operation -> COMPASS .)
    L_ASSIGNMENT    reduce using rule 59 (robot_operation -> COMPASS .)
    MUL             reduce using rule 59 (robot_operation -> COMPASS .)
    DIV             reduce using rule 59 (robot_operation -> COMPASS .)
    ADD             reduce using rule 59 (robot_operation -> COMPASS .)
    SUB             reduce using rule 59 (robot_operation -> COMPASS .)
    CLOSING_BR      reduce using rule 59 (robot_operation -> COMPASS .)
    N_EQ            reduce using rule 59 (robot_operation -> COMPASS .)
    L_EQ            reduce using rule 59 (robot_operation -> COMPASS .)
    GR_EQ           reduce using rule 59 (robot_operation -> COMPASS .)
    DO              reduce using rule 59 (robot_operation -> COMPASS .)


state 48

    (60) return -> RETURN . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 78
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 49

    (46) varlit -> matr_elem .

    R_ASSIGNMENT    reduce using rule 46 (varlit -> matr_elem .)
    L_ASSIGNMENT    reduce using rule 46 (varlit -> matr_elem .)
    MUL             reduce using rule 46 (varlit -> matr_elem .)
    DIV             reduce using rule 46 (varlit -> matr_elem .)
    ADD             reduce using rule 46 (varlit -> matr_elem .)
    SUB             reduce using rule 46 (varlit -> matr_elem .)
    COMMA           reduce using rule 46 (varlit -> matr_elem .)
    DOT             reduce using rule 46 (varlit -> matr_elem .)
    CLOSING_BR      reduce using rule 46 (varlit -> matr_elem .)
    N_EQ            reduce using rule 46 (varlit -> matr_elem .)
    L_EQ            reduce using rule 46 (varlit -> matr_elem .)
    GR_EQ           reduce using rule 46 (varlit -> matr_elem .)
    DO              reduce using rule 46 (varlit -> matr_elem .)


state 50

    (28) literal -> U_NUMBER .

    R_ASSIGNMENT    reduce using rule 28 (literal -> U_NUMBER .)
    L_ASSIGNMENT    reduce using rule 28 (literal -> U_NUMBER .)
    MUL             reduce using rule 28 (literal -> U_NUMBER .)
    DIV             reduce using rule 28 (literal -> U_NUMBER .)
    ADD             reduce using rule 28 (literal -> U_NUMBER .)
    SUB             reduce using rule 28 (literal -> U_NUMBER .)
    COMMA           reduce using rule 28 (literal -> U_NUMBER .)
    DOT             reduce using rule 28 (literal -> U_NUMBER .)
    CLOSING_BR      reduce using rule 28 (literal -> U_NUMBER .)
    N_EQ            reduce using rule 28 (literal -> U_NUMBER .)
    L_EQ            reduce using rule 28 (literal -> U_NUMBER .)
    GR_EQ           reduce using rule 28 (literal -> U_NUMBER .)
    DO              reduce using rule 28 (literal -> U_NUMBER .)
    U_NUMBER        reduce using rule 28 (literal -> U_NUMBER .)
    S_NUMBER        reduce using rule 28 (literal -> U_NUMBER .)
    SQ_CLOSING_BR   reduce using rule 28 (literal -> U_NUMBER .)


state 51

    (29) literal -> S_NUMBER .

    R_ASSIGNMENT    reduce using rule 29 (literal -> S_NUMBER .)
    L_ASSIGNMENT    reduce using rule 29 (literal -> S_NUMBER .)
    MUL             reduce using rule 29 (literal -> S_NUMBER .)
    DIV             reduce using rule 29 (literal -> S_NUMBER .)
    ADD             reduce using rule 29 (literal -> S_NUMBER .)
    SUB             reduce using rule 29 (literal -> S_NUMBER .)
    COMMA           reduce using rule 29 (literal -> S_NUMBER .)
    DOT             reduce using rule 29 (literal -> S_NUMBER .)
    CLOSING_BR      reduce using rule 29 (literal -> S_NUMBER .)
    N_EQ            reduce using rule 29 (literal -> S_NUMBER .)
    L_EQ            reduce using rule 29 (literal -> S_NUMBER .)
    GR_EQ           reduce using rule 29 (literal -> S_NUMBER .)
    DO              reduce using rule 29 (literal -> S_NUMBER .)
    U_NUMBER        reduce using rule 29 (literal -> S_NUMBER .)
    S_NUMBER        reduce using rule 29 (literal -> S_NUMBER .)
    SQ_CLOSING_BR   reduce using rule 29 (literal -> S_NUMBER .)


state 52

    (6) par_list -> parameter COMMA par_list .

    SQ_CLOSING_BR   reduce using rule 6 (par_list -> parameter COMMA par_list .)


state 53

    (9) parameter -> FIELD type type . VARIABLE

    VARIABLE        shift and go to state 79


state 54

    (4) function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list . END DOT

    END             shift and go to state 80


state 55

    (20) declaration -> type variable_list . R_ASSIGNMENT literal

    R_ASSIGNMENT    shift and go to state 81


state 56

    (26) variable_list -> VARIABLE . variable_list
    (27) variable_list -> VARIABLE .
    (26) variable_list -> . VARIABLE variable_list
    (27) variable_list -> . VARIABLE

    R_ASSIGNMENT    reduce using rule 27 (variable_list -> VARIABLE .)
    CLOSING_BR      reduce using rule 27 (variable_list -> VARIABLE .)
    VARIABLE        shift and go to state 56

    variable_list                  shift and go to state 82

state 57

    (53) function_call -> VARIABLE OPEN_BR . CLOSING_BR
    (54) function_call -> VARIABLE OPEN_BR . variable_list CLOSING_BR
    (26) variable_list -> . VARIABLE variable_list
    (27) variable_list -> . VARIABLE

    CLOSING_BR      shift and go to state 83
    VARIABLE        shift and go to state 56

    variable_list                  shift and go to state 84

state 58

    (47) matr_elem -> VARIABLE SQ_OPEN_BR . literal literal SQ_CLOSING_BR
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER

    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    literal                        shift and go to state 85

state 59

    (5) function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END . DOT

    DOT             shift and go to state 86


state 60

    (10) stmt_list -> statement COMMA . stmt_list
    (10) stmt_list -> . statement COMMA stmt_list
    (11) stmt_list -> . statement DOT
    (12) statement -> . declaration
    (13) statement -> . assignment
    (14) statement -> . arithm_operation
    (15) statement -> . until
    (16) statement -> . check
    (17) statement -> . function_call
    (18) statement -> . robot_operation
    (19) statement -> . return
    (20) declaration -> . type variable_list R_ASSIGNMENT literal
    (21) declaration -> . FIELD type type variable_list R_ASSIGNMENT literal
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (51) until -> . UNTIL comparison DO stmt_list
    (52) check -> . CHECK comparison DO stmt_list
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (60) return -> . RETURN arithm_operation
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    FIELD           shift and go to state 36
    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    UNTIL           shift and go to state 41
    CHECK           shift and go to state 42
    VARIABLE        shift and go to state 24
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    RETURN          shift and go to state 48
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    statement                      shift and go to state 26
    stmt_list                      shift and go to state 87
    declaration                    shift and go to state 27
    assignment                     shift and go to state 28
    arithm_operation               shift and go to state 29
    until                          shift and go to state 30
    check                          shift and go to state 31
    function_call                  shift and go to state 32
    robot_operation                shift and go to state 33
    return                         shift and go to state 34
    type                           shift and go to state 23
    literal                        shift and go to state 35
    varlit                         shift and go to state 40
    matr_elem                      shift and go to state 49

state 61

    (11) stmt_list -> statement DOT .

    END             reduce using rule 11 (stmt_list -> statement DOT .)
    COMMA           reduce using rule 11 (stmt_list -> statement DOT .)
    DOT             reduce using rule 11 (stmt_list -> statement DOT .)


state 62

    (30) assignment -> arithm_operation R_ASSIGNMENT . arithm_operation
    (31) assignment -> arithm_operation R_ASSIGNMENT . assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 88
    assignment                     shift and go to state 89
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 63

    (32) assignment -> arithm_operation L_ASSIGNMENT . arithm_operation
    (33) assignment -> arithm_operation L_ASSIGNMENT . assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 90
    assignment                     shift and go to state 91
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 64

    (37) arithm_operation -> arithm_operation MUL . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 92
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 65

    (38) arithm_operation -> arithm_operation DIV . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 93
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 66

    (39) arithm_operation -> arithm_operation ADD . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 94
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 67

    (40) arithm_operation -> arithm_operation SUB . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 95
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 68

    (21) declaration -> FIELD type . type variable_list R_ASSIGNMENT literal
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG

    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8

    type                           shift and go to state 96

state 69

    (34) arithm_operation -> OPEN_BR arithm_operation . CLOSING_BR
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    CLOSING_BR      shift and go to state 97
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 70

    (42) arithm_operation -> function_call .

    CLOSING_BR      reduce using rule 42 (arithm_operation -> function_call .)
    MUL             reduce using rule 42 (arithm_operation -> function_call .)
    DIV             reduce using rule 42 (arithm_operation -> function_call .)
    ADD             reduce using rule 42 (arithm_operation -> function_call .)
    SUB             reduce using rule 42 (arithm_operation -> function_call .)
    R_ASSIGNMENT    reduce using rule 42 (arithm_operation -> function_call .)
    L_ASSIGNMENT    reduce using rule 42 (arithm_operation -> function_call .)
    COMMA           reduce using rule 42 (arithm_operation -> function_call .)
    DOT             reduce using rule 42 (arithm_operation -> function_call .)
    N_EQ            reduce using rule 42 (arithm_operation -> function_call .)
    L_EQ            reduce using rule 42 (arithm_operation -> function_call .)
    GR_EQ           reduce using rule 42 (arithm_operation -> function_call .)
    DO              reduce using rule 42 (arithm_operation -> function_call .)


state 71

    (43) arithm_operation -> robot_operation .

    CLOSING_BR      reduce using rule 43 (arithm_operation -> robot_operation .)
    MUL             reduce using rule 43 (arithm_operation -> robot_operation .)
    DIV             reduce using rule 43 (arithm_operation -> robot_operation .)
    ADD             reduce using rule 43 (arithm_operation -> robot_operation .)
    SUB             reduce using rule 43 (arithm_operation -> robot_operation .)
    R_ASSIGNMENT    reduce using rule 43 (arithm_operation -> robot_operation .)
    L_ASSIGNMENT    reduce using rule 43 (arithm_operation -> robot_operation .)
    COMMA           reduce using rule 43 (arithm_operation -> robot_operation .)
    DOT             reduce using rule 43 (arithm_operation -> robot_operation .)
    N_EQ            reduce using rule 43 (arithm_operation -> robot_operation .)
    L_EQ            reduce using rule 43 (arithm_operation -> robot_operation .)
    GR_EQ           reduce using rule 43 (arithm_operation -> robot_operation .)
    DO              reduce using rule 43 (arithm_operation -> robot_operation .)


state 72

    (44) varlit -> VARIABLE .
    (53) function_call -> VARIABLE . OPEN_BR CLOSING_BR
    (54) function_call -> VARIABLE . OPEN_BR variable_list CLOSING_BR
    (47) matr_elem -> VARIABLE . SQ_OPEN_BR literal literal SQ_CLOSING_BR

    CLOSING_BR      reduce using rule 44 (varlit -> VARIABLE .)
    MUL             reduce using rule 44 (varlit -> VARIABLE .)
    DIV             reduce using rule 44 (varlit -> VARIABLE .)
    ADD             reduce using rule 44 (varlit -> VARIABLE .)
    SUB             reduce using rule 44 (varlit -> VARIABLE .)
    R_ASSIGNMENT    reduce using rule 44 (varlit -> VARIABLE .)
    L_ASSIGNMENT    reduce using rule 44 (varlit -> VARIABLE .)
    COMMA           reduce using rule 44 (varlit -> VARIABLE .)
    DOT             reduce using rule 44 (varlit -> VARIABLE .)
    N_EQ            reduce using rule 44 (varlit -> VARIABLE .)
    L_EQ            reduce using rule 44 (varlit -> VARIABLE .)
    GR_EQ           reduce using rule 44 (varlit -> VARIABLE .)
    DO              reduce using rule 44 (varlit -> VARIABLE .)
    OPEN_BR         shift and go to state 57
    SQ_OPEN_BR      shift and go to state 58


state 73

    (35) arithm_operation -> ADD arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    R_ASSIGNMENT    reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    L_ASSIGNMENT    reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    ADD             reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    SUB             reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    COMMA           reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    DOT             reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    CLOSING_BR      reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    N_EQ            reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    L_EQ            reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    GR_EQ           reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    DO              reduce using rule 35 (arithm_operation -> ADD arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65

  ! MUL             [ reduce using rule 35 (arithm_operation -> ADD arithm_operation .) ]
  ! DIV             [ reduce using rule 35 (arithm_operation -> ADD arithm_operation .) ]
  ! ADD             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 74

    (36) arithm_operation -> SUB arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    R_ASSIGNMENT    reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    L_ASSIGNMENT    reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    ADD             reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    SUB             reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    COMMA           reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    DOT             reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    CLOSING_BR      reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    N_EQ            reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    L_EQ            reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    GR_EQ           reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    DO              reduce using rule 36 (arithm_operation -> SUB arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65

  ! MUL             [ reduce using rule 36 (arithm_operation -> SUB arithm_operation .) ]
  ! DIV             [ reduce using rule 36 (arithm_operation -> SUB arithm_operation .) ]
  ! ADD             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 75

    (51) until -> UNTIL comparison . DO stmt_list

    DO              shift and go to state 98


state 76

    (48) comparison -> arithm_operation . N_EQ arithm_operation
    (49) comparison -> arithm_operation . L_EQ arithm_operation
    (50) comparison -> arithm_operation . GR_EQ arithm_operation
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    N_EQ            shift and go to state 99
    L_EQ            shift and go to state 100
    GR_EQ           shift and go to state 101
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 77

    (52) check -> CHECK comparison . DO stmt_list

    DO              shift and go to state 102


state 78

    (60) return -> RETURN arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    COMMA           reduce using rule 60 (return -> RETURN arithm_operation .)
    DOT             reduce using rule 60 (return -> RETURN arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 79

    (9) parameter -> FIELD type type VARIABLE .

    COMMA           reduce using rule 9 (parameter -> FIELD type type VARIABLE .)
    SQ_CLOSING_BR   reduce using rule 9 (parameter -> FIELD type type VARIABLE .)


state 80

    (4) function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END . DOT

    DOT             shift and go to state 103


state 81

    (20) declaration -> type variable_list R_ASSIGNMENT . literal
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER

    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    literal                        shift and go to state 104

state 82

    (26) variable_list -> VARIABLE variable_list .

    R_ASSIGNMENT    reduce using rule 26 (variable_list -> VARIABLE variable_list .)
    CLOSING_BR      reduce using rule 26 (variable_list -> VARIABLE variable_list .)


state 83

    (53) function_call -> VARIABLE OPEN_BR CLOSING_BR .

    COMMA           reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    DOT             reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    R_ASSIGNMENT    reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    L_ASSIGNMENT    reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    MUL             reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    DIV             reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    ADD             reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    SUB             reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    CLOSING_BR      reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    N_EQ            reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    L_EQ            reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    GR_EQ           reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)
    DO              reduce using rule 53 (function_call -> VARIABLE OPEN_BR CLOSING_BR .)


state 84

    (54) function_call -> VARIABLE OPEN_BR variable_list . CLOSING_BR

    CLOSING_BR      shift and go to state 105


state 85

    (47) matr_elem -> VARIABLE SQ_OPEN_BR literal . literal SQ_CLOSING_BR
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER

    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    literal                        shift and go to state 106

state 86

    (5) function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT .

    TINY            reduce using rule 5 (function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    SMALL           reduce using rule 5 (function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    NORMAL          reduce using rule 5 (function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    BIG             reduce using rule 5 (function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    $end            reduce using rule 5 (function -> type VARIABLE SQ_OPEN_BR SQ_CLOSING_BR BEGIN stmt_list END DOT .)


state 87

    (10) stmt_list -> statement COMMA stmt_list .

    END             reduce using rule 10 (stmt_list -> statement COMMA stmt_list .)
    COMMA           reduce using rule 10 (stmt_list -> statement COMMA stmt_list .)
    DOT             reduce using rule 10 (stmt_list -> statement COMMA stmt_list .)


state 88

    (30) assignment -> arithm_operation R_ASSIGNMENT arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation
    (30) assignment -> arithm_operation . R_ASSIGNMENT arithm_operation
    (31) assignment -> arithm_operation . R_ASSIGNMENT assignment
    (32) assignment -> arithm_operation . L_ASSIGNMENT arithm_operation
    (33) assignment -> arithm_operation . L_ASSIGNMENT assignment

    COMMA           reduce using rule 30 (assignment -> arithm_operation R_ASSIGNMENT arithm_operation .)
    DOT             reduce using rule 30 (assignment -> arithm_operation R_ASSIGNMENT arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67
    R_ASSIGNMENT    shift and go to state 62
    L_ASSIGNMENT    shift and go to state 63


state 89

    (31) assignment -> arithm_operation R_ASSIGNMENT assignment .

    COMMA           reduce using rule 31 (assignment -> arithm_operation R_ASSIGNMENT assignment .)
    DOT             reduce using rule 31 (assignment -> arithm_operation R_ASSIGNMENT assignment .)


state 90

    (32) assignment -> arithm_operation L_ASSIGNMENT arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation
    (30) assignment -> arithm_operation . R_ASSIGNMENT arithm_operation
    (31) assignment -> arithm_operation . R_ASSIGNMENT assignment
    (32) assignment -> arithm_operation . L_ASSIGNMENT arithm_operation
    (33) assignment -> arithm_operation . L_ASSIGNMENT assignment

    COMMA           reduce using rule 32 (assignment -> arithm_operation L_ASSIGNMENT arithm_operation .)
    DOT             reduce using rule 32 (assignment -> arithm_operation L_ASSIGNMENT arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67
    R_ASSIGNMENT    shift and go to state 62
    L_ASSIGNMENT    shift and go to state 63


state 91

    (33) assignment -> arithm_operation L_ASSIGNMENT assignment .

    COMMA           reduce using rule 33 (assignment -> arithm_operation L_ASSIGNMENT assignment .)
    DOT             reduce using rule 33 (assignment -> arithm_operation L_ASSIGNMENT assignment .)


state 92

    (37) arithm_operation -> arithm_operation MUL arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    R_ASSIGNMENT    reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    L_ASSIGNMENT    reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    MUL             reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    DIV             reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    ADD             reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    SUB             reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    COMMA           reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    DOT             reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    CLOSING_BR      reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    N_EQ            reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    L_EQ            reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    GR_EQ           reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)
    DO              reduce using rule 37 (arithm_operation -> arithm_operation MUL arithm_operation .)

  ! MUL             [ shift and go to state 64 ]
  ! DIV             [ shift and go to state 65 ]
  ! ADD             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 93

    (38) arithm_operation -> arithm_operation DIV arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    R_ASSIGNMENT    reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    L_ASSIGNMENT    reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    MUL             reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    DIV             reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    ADD             reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    SUB             reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    COMMA           reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    DOT             reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    CLOSING_BR      reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    N_EQ            reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    L_EQ            reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    GR_EQ           reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)
    DO              reduce using rule 38 (arithm_operation -> arithm_operation DIV arithm_operation .)

  ! MUL             [ shift and go to state 64 ]
  ! DIV             [ shift and go to state 65 ]
  ! ADD             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 94

    (39) arithm_operation -> arithm_operation ADD arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    R_ASSIGNMENT    reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    L_ASSIGNMENT    reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    ADD             reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    SUB             reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    COMMA           reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    DOT             reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    CLOSING_BR      reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    N_EQ            reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    L_EQ            reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    GR_EQ           reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    DO              reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65

  ! MUL             [ reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .) ]
  ! DIV             [ reduce using rule 39 (arithm_operation -> arithm_operation ADD arithm_operation .) ]
  ! ADD             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 95

    (40) arithm_operation -> arithm_operation SUB arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    R_ASSIGNMENT    reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    L_ASSIGNMENT    reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    ADD             reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    SUB             reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    COMMA           reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    DOT             reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    CLOSING_BR      reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    N_EQ            reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    L_EQ            reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    GR_EQ           reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    DO              reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65

  ! MUL             [ reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .) ]
  ! DIV             [ reduce using rule 40 (arithm_operation -> arithm_operation SUB arithm_operation .) ]
  ! ADD             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 96

    (21) declaration -> FIELD type type . variable_list R_ASSIGNMENT literal
    (26) variable_list -> . VARIABLE variable_list
    (27) variable_list -> . VARIABLE

    VARIABLE        shift and go to state 56

    variable_list                  shift and go to state 107

state 97

    (34) arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .

    R_ASSIGNMENT    reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    L_ASSIGNMENT    reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    MUL             reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    DIV             reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    ADD             reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    SUB             reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    COMMA           reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    DOT             reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    CLOSING_BR      reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    N_EQ            reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    L_EQ            reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    GR_EQ           reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)
    DO              reduce using rule 34 (arithm_operation -> OPEN_BR arithm_operation CLOSING_BR .)


state 98

    (51) until -> UNTIL comparison DO . stmt_list
    (10) stmt_list -> . statement COMMA stmt_list
    (11) stmt_list -> . statement DOT
    (12) statement -> . declaration
    (13) statement -> . assignment
    (14) statement -> . arithm_operation
    (15) statement -> . until
    (16) statement -> . check
    (17) statement -> . function_call
    (18) statement -> . robot_operation
    (19) statement -> . return
    (20) declaration -> . type variable_list R_ASSIGNMENT literal
    (21) declaration -> . FIELD type type variable_list R_ASSIGNMENT literal
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (51) until -> . UNTIL comparison DO stmt_list
    (52) check -> . CHECK comparison DO stmt_list
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (60) return -> . RETURN arithm_operation
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    FIELD           shift and go to state 36
    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    UNTIL           shift and go to state 41
    CHECK           shift and go to state 42
    VARIABLE        shift and go to state 24
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    RETURN          shift and go to state 48
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    stmt_list                      shift and go to state 108
    statement                      shift and go to state 26
    declaration                    shift and go to state 27
    assignment                     shift and go to state 28
    arithm_operation               shift and go to state 29
    until                          shift and go to state 30
    check                          shift and go to state 31
    function_call                  shift and go to state 32
    robot_operation                shift and go to state 33
    return                         shift and go to state 34
    type                           shift and go to state 23
    literal                        shift and go to state 35
    varlit                         shift and go to state 40
    matr_elem                      shift and go to state 49

state 99

    (48) comparison -> arithm_operation N_EQ . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 109
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 100

    (49) comparison -> arithm_operation L_EQ . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 110
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 101

    (50) comparison -> arithm_operation GR_EQ . arithm_operation
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    VARIABLE        shift and go to state 72
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    arithm_operation               shift and go to state 111
    varlit                         shift and go to state 40
    function_call                  shift and go to state 70
    robot_operation                shift and go to state 71
    literal                        shift and go to state 35
    matr_elem                      shift and go to state 49

state 102

    (52) check -> CHECK comparison DO . stmt_list
    (10) stmt_list -> . statement COMMA stmt_list
    (11) stmt_list -> . statement DOT
    (12) statement -> . declaration
    (13) statement -> . assignment
    (14) statement -> . arithm_operation
    (15) statement -> . until
    (16) statement -> . check
    (17) statement -> . function_call
    (18) statement -> . robot_operation
    (19) statement -> . return
    (20) declaration -> . type variable_list R_ASSIGNMENT literal
    (21) declaration -> . FIELD type type variable_list R_ASSIGNMENT literal
    (30) assignment -> . arithm_operation R_ASSIGNMENT arithm_operation
    (31) assignment -> . arithm_operation R_ASSIGNMENT assignment
    (32) assignment -> . arithm_operation L_ASSIGNMENT arithm_operation
    (33) assignment -> . arithm_operation L_ASSIGNMENT assignment
    (34) arithm_operation -> . OPEN_BR arithm_operation CLOSING_BR
    (35) arithm_operation -> . ADD arithm_operation
    (36) arithm_operation -> . SUB arithm_operation
    (37) arithm_operation -> . arithm_operation MUL arithm_operation
    (38) arithm_operation -> . arithm_operation DIV arithm_operation
    (39) arithm_operation -> . arithm_operation ADD arithm_operation
    (40) arithm_operation -> . arithm_operation SUB arithm_operation
    (41) arithm_operation -> . varlit
    (42) arithm_operation -> . function_call
    (43) arithm_operation -> . robot_operation
    (51) until -> . UNTIL comparison DO stmt_list
    (52) check -> . CHECK comparison DO stmt_list
    (53) function_call -> . VARIABLE OPEN_BR CLOSING_BR
    (54) function_call -> . VARIABLE OPEN_BR variable_list CLOSING_BR
    (55) robot_operation -> . GO
    (56) robot_operation -> . RL
    (57) robot_operation -> . RR
    (58) robot_operation -> . SONAR
    (59) robot_operation -> . COMPASS
    (60) return -> . RETURN arithm_operation
    (22) type -> . TINY
    (23) type -> . SMALL
    (24) type -> . NORMAL
    (25) type -> . BIG
    (44) varlit -> . VARIABLE
    (45) varlit -> . literal
    (46) varlit -> . matr_elem
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER
    (47) matr_elem -> . VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR

    FIELD           shift and go to state 36
    OPEN_BR         shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39
    UNTIL           shift and go to state 41
    CHECK           shift and go to state 42
    VARIABLE        shift and go to state 24
    GO              shift and go to state 43
    RL              shift and go to state 44
    RR              shift and go to state 45
    SONAR           shift and go to state 46
    COMPASS         shift and go to state 47
    RETURN          shift and go to state 48
    TINY            shift and go to state 5
    SMALL           shift and go to state 6
    NORMAL          shift and go to state 7
    BIG             shift and go to state 8
    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    stmt_list                      shift and go to state 112
    statement                      shift and go to state 26
    declaration                    shift and go to state 27
    assignment                     shift and go to state 28
    arithm_operation               shift and go to state 29
    until                          shift and go to state 30
    check                          shift and go to state 31
    function_call                  shift and go to state 32
    robot_operation                shift and go to state 33
    return                         shift and go to state 34
    type                           shift and go to state 23
    literal                        shift and go to state 35
    varlit                         shift and go to state 40
    matr_elem                      shift and go to state 49

state 103

    (4) function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT .

    TINY            reduce using rule 4 (function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    SMALL           reduce using rule 4 (function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    NORMAL          reduce using rule 4 (function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    BIG             reduce using rule 4 (function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT .)
    $end            reduce using rule 4 (function -> type VARIABLE SQ_OPEN_BR par_list SQ_CLOSING_BR BEGIN stmt_list END DOT .)


state 104

    (20) declaration -> type variable_list R_ASSIGNMENT literal .

    COMMA           reduce using rule 20 (declaration -> type variable_list R_ASSIGNMENT literal .)
    DOT             reduce using rule 20 (declaration -> type variable_list R_ASSIGNMENT literal .)


state 105

    (54) function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .

    COMMA           reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    DOT             reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    R_ASSIGNMENT    reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    L_ASSIGNMENT    reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    MUL             reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    DIV             reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    ADD             reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    SUB             reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    CLOSING_BR      reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    N_EQ            reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    L_EQ            reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    GR_EQ           reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)
    DO              reduce using rule 54 (function_call -> VARIABLE OPEN_BR variable_list CLOSING_BR .)


state 106

    (47) matr_elem -> VARIABLE SQ_OPEN_BR literal literal . SQ_CLOSING_BR

    SQ_CLOSING_BR   shift and go to state 113


state 107

    (21) declaration -> FIELD type type variable_list . R_ASSIGNMENT literal

    R_ASSIGNMENT    shift and go to state 114


state 108

    (51) until -> UNTIL comparison DO stmt_list .

    COMMA           reduce using rule 51 (until -> UNTIL comparison DO stmt_list .)
    DOT             reduce using rule 51 (until -> UNTIL comparison DO stmt_list .)


state 109

    (48) comparison -> arithm_operation N_EQ arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    DO              reduce using rule 48 (comparison -> arithm_operation N_EQ arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 110

    (49) comparison -> arithm_operation L_EQ arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    DO              reduce using rule 49 (comparison -> arithm_operation L_EQ arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 111

    (50) comparison -> arithm_operation GR_EQ arithm_operation .
    (37) arithm_operation -> arithm_operation . MUL arithm_operation
    (38) arithm_operation -> arithm_operation . DIV arithm_operation
    (39) arithm_operation -> arithm_operation . ADD arithm_operation
    (40) arithm_operation -> arithm_operation . SUB arithm_operation

    DO              reduce using rule 50 (comparison -> arithm_operation GR_EQ arithm_operation .)
    MUL             shift and go to state 64
    DIV             shift and go to state 65
    ADD             shift and go to state 66
    SUB             shift and go to state 67


state 112

    (52) check -> CHECK comparison DO stmt_list .

    COMMA           reduce using rule 52 (check -> CHECK comparison DO stmt_list .)
    DOT             reduce using rule 52 (check -> CHECK comparison DO stmt_list .)


state 113

    (47) matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .

    R_ASSIGNMENT    reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    L_ASSIGNMENT    reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    MUL             reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    DIV             reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    ADD             reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    SUB             reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    COMMA           reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    DOT             reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    CLOSING_BR      reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    N_EQ            reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    L_EQ            reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    GR_EQ           reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)
    DO              reduce using rule 47 (matr_elem -> VARIABLE SQ_OPEN_BR literal literal SQ_CLOSING_BR .)


state 114

    (21) declaration -> FIELD type type variable_list R_ASSIGNMENT . literal
    (28) literal -> . U_NUMBER
    (29) literal -> . S_NUMBER

    U_NUMBER        shift and go to state 50
    S_NUMBER        shift and go to state 51

    literal                        shift and go to state 115

state 115

    (21) declaration -> FIELD type type variable_list R_ASSIGNMENT literal .

    COMMA           reduce using rule 21 (declaration -> FIELD type type variable_list R_ASSIGNMENT literal .)
    DOT             reduce using rule 21 (declaration -> FIELD type type variable_list R_ASSIGNMENT literal .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 32 resolved using rule (statement -> function_call)
WARNING: rejected rule (arithm_operation -> function_call) in state 32
WARNING: reduce/reduce conflict in state 33 resolved using rule (statement -> robot_operation)
WARNING: rejected rule (arithm_operation -> robot_operation) in state 33
